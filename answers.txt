I. Working with method overloading- Try to add a method addDigitalVideoDisc which allows to pass an arbitrary number of arguments for dvd. Compare to an array parameter. What do you prefer in this case?I prefer the method that takes the array as the input parameter as it is more convenient, and we do not have to type many parameters to pass them in the method.II. Passing parameter - Is JAVA a Pass by Value or a Pass by Reference programming language?Java is always a pass by value programming language- After the call of swap(jungleDVD, cinderellaDVD) why does the title of these two objects still remain?Because Java is a pass by value language, when the swap method is called, the two references “jungleDVD” and “cinderellaDVD” of the two objects are not actually passed in the method, but their copies are. And when the method is over, they still point to the same space of memory.- After the call of changeTitle(jungleDVD, cinderellaDVD.getTitle()) why is the title of the JungleDVD changed?The changeTitle method changed the “jungleDVD”’s title as it passed the new title in the setter of the class, which can access to the actual attribute (the title), not the copy. And when the last line of the method is executed, it actually made the change to the copy of the “jungleDVD”, not the “jungleDVD”, so the “jungleDVD” is still changed to the new title.